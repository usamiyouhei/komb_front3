export var THEME = /* @__PURE__ */ ((THEME2) => {
  THEME2["admin"] = "admin";
  THEME2["tenant"] = "tenant";
  THEME2["test"] = "test";
  THEME2["default"] = "default";
  return THEME2;
})(THEME || {});
export var THEME_COLOR = /* @__PURE__ */ ((THEME_COLOR2) => {
  THEME_COLOR2["header"] = "header";
  THEME_COLOR2["subheader"] = "subheader";
  THEME_COLOR2["base"] = "base";
  THEME_COLOR2["primary"] = "primary";
  THEME_COLOR2["secondary"] = "secondary";
  THEME_COLOR2["error"] = "error";
  THEME_COLOR2["info"] = "info";
  THEME_COLOR2["success"] = "success";
  THEME_COLOR2["warning"] = "warning";
  THEME_COLOR2["background"] = "background";
  THEME_COLOR2["surface"] = "surface";
  THEME_COLOR2["disabled"] = "disabled";
  THEME_COLOR2["line"] = "line";
  THEME_COLOR2["guide"] = "guide";
  THEME_COLOR2["link"] = "link";
  THEME_COLOR2["visited"] = "visited";
  THEME_COLOR2["active"] = "active";
  THEME_COLOR2["color"] = "color";
  THEME_COLOR2["reverse"] = "reverse";
  THEME_COLOR2["form"] = "form";
  THEME_COLOR2["scroll"] = "scroll";
  THEME_COLOR2["listhead"] = "listhead";
  THEME_COLOR2["listbody"] = "listbody";
  return THEME_COLOR2;
})(THEME_COLOR || {});
export var POSITION = /* @__PURE__ */ ((POSITION2) => {
  POSITION2["TOP"] = "top";
  POSITION2["LEFT"] = "left";
  POSITION2["RIGHT"] = "right";
  POSITION2["BOTTOM"] = "bottom";
  return POSITION2;
})(POSITION || {});
export var ICONS = /* @__PURE__ */ ((ICONS2) => {
  ICONS2["CLOSE"] = "mdi-close";
  ICONS2["MENU"] = "mdi-menu";
  ICONS2["COG"] = "mdi-cog";
  ICONS2["PENCIL"] = "mdi-pencil";
  ICONS2["PENCIL_BOX"] = "mdi-pencil-box-outline";
  ICONS2["RESIZE"] = "mdi-resize-bottom-right";
  ICONS2["RELOAD"] = "mdi-reload";
  ICONS2["RADIO_OFF"] = "mdi-radiobox-blank";
  ICONS2["RADIO_ON"] = "mdi-radiobox-marked";
  ICONS2["CHECK_OFF"] = "mdi-checkbox-blank-outline";
  ICONS2["CHECK_ON"] = "mdi-checkbox-outline";
  ICONS2["LOCK"] = "mdi-lock";
  ICONS2["PLAY"] = "mdi-play-circle";
  ICONS2["CHECK"] = "mdi-check";
  ICONS2["FILTER_MENU"] = "mdi-filter";
  ICONS2["PLUS"] = "mdi-plus-circle-outline";
  return ICONS2;
})(ICONS || {});
export var FORM_ICONS = /* @__PURE__ */ ((FORM_ICONS2) => {
  FORM_ICONS2["CLOSE"] = "mdi-close";
  FORM_ICONS2["LEFT"] = "mdi-menu-left";
  FORM_ICONS2["UP"] = "mdi-menu-up";
  FORM_ICONS2["RIGHT"] = "mdi-menu-right";
  FORM_ICONS2["DOWN"] = "mdi-menu-down";
  FORM_ICONS2["EYE_ON"] = "mdi-eye";
  FORM_ICONS2["EYE_OFF"] = "mdi-eye-off";
  FORM_ICONS2["DATE"] = "mdi-calendar-range";
  FORM_ICONS2["TIME"] = "mdi-clock-outline";
  FORM_ICONS2["DATETIME"] = "mdi-calendar-clock";
  FORM_ICONS2["YEN"] = "mdi-currency-jpy";
  FORM_ICONS2["MAIL"] = "mdi-email-outline";
  FORM_ICONS2["PHONE"] = "mdi-phone";
  FORM_ICONS2["CELLPHONE"] = "mdi-cellphone";
  return FORM_ICONS2;
})(FORM_ICONS || {});
export var SNACKBAR_TYPE = /* @__PURE__ */ ((SNACKBAR_TYPE2) => {
  SNACKBAR_TYPE2["ALERT"] = "alert";
  SNACKBAR_TYPE2["ERROR"] = "error";
  SNACKBAR_TYPE2["INFO"] = "info";
  SNACKBAR_TYPE2["BELL"] = "bell";
  SNACKBAR_TYPE2["DANGER"] = "danger";
  SNACKBAR_TYPE2["DEFAULT"] = "default";
  return SNACKBAR_TYPE2;
})(SNACKBAR_TYPE || {});
export const SNACKBAR_ICOM = {
  alert: { icon: "mdi-alert-circle", color: "warning" /* warning */ },
  error: { icon: "mdi-close-circle", color: "error" /* error */ },
  info: { icon: "mdi-alert-box", color: "info" /* info */ },
  bell: { icon: "mdi-bell", color: "success" /* success */ },
  danger: { icon: "mdi-alert-decagram", color: "red" },
  default: { icon: "mdi-bell", color: "white" }
};
export var PROGRESS_TYPE = /* @__PURE__ */ ((PROGRESS_TYPE2) => {
  PROGRESS_TYPE2["LINE"] = "line";
  PROGRESS_TYPE2["CIRCLE"] = "circle";
  PROGRESS_TYPE2["INFINITY"] = "infinity";
  return PROGRESS_TYPE2;
})(PROGRESS_TYPE || {});
export var ALIGN = /* @__PURE__ */ ((ALIGN2) => {
  ALIGN2["CENTER"] = "center";
  ALIGN2["LEFT"] = "left";
  ALIGN2["RIGHT"] = "right";
  return ALIGN2;
})(ALIGN || {});
export var SLIDER_TYPE = /* @__PURE__ */ ((SLIDER_TYPE2) => {
  SLIDER_TYPE2["SMOOTH"] = "smooth";
  SLIDER_TYPE2["POINT"] = "point";
  return SLIDER_TYPE2;
})(SLIDER_TYPE || {});
export const PREFECTURE_ARRAY = [
  { id: 1, label: "\u5317\u6D77\u9053", value: "hokkaido" },
  { id: 2, label: "\u9752\u68EE\u770C", value: "aomori" },
  { id: 3, label: "\u5CA9\u624B\u770C", value: "iwate" },
  { id: 4, label: "\u5BAE\u57CE\u770C", value: "miyagi" },
  { id: 5, label: "\u79CB\u7530\u770C", value: "akita" },
  { id: 6, label: "\u5C71\u5F62\u770C", value: "yamagata" },
  { id: 7, label: "\u798F\u5CF6\u770C", value: "fukushima" },
  { id: 8, label: "\u8328\u57CE\u770C", value: "ibaraki" },
  { id: 9, label: "\u6803\u6728\u770C", value: "tochigi" },
  { id: 10, label: "\u7FA4\u99AC\u770C", value: "gunma" },
  { id: 11, label: "\u57FC\u7389\u770C", value: "saitama" },
  { id: 12, label: "\u5343\u8449\u770C", value: "chiba" },
  { id: 13, label: "\u6771\u4EAC\u90FD", value: "tokyo" },
  { id: 14, label: "\u795E\u5948\u5DDD\u770C", value: "kanagawa" },
  { id: 15, label: "\u65B0\u6F5F\u770C", value: "niigata" },
  { id: 16, label: "\u5BCC\u5C71\u770C", value: "toyama" },
  { id: 17, label: "\u77F3\u5DDD\u770C", value: "ishikawa" },
  { id: 18, label: "\u798F\u4E95\u770C", value: "fukui" },
  { id: 19, label: "\u5C71\u68A8\u770C", value: "yamanashi" },
  { id: 20, label: "\u9577\u91CE\u770C", value: "nagano" },
  { id: 21, label: "\u5C90\u961C\u770C", value: "gifu" },
  { id: 22, label: "\u9759\u5CA1\u770C", value: "shizuoka" },
  { id: 23, label: "\u611B\u77E5\u770C", value: "aichi" },
  { id: 24, label: "\u4E09\u91CD\u770C", value: "mie" },
  { id: 25, label: "\u6ECB\u8CC0\u770C", value: "shiga" },
  { id: 26, label: "\u4EAC\u90FD\u5E9C", value: "kyoto" },
  { id: 27, label: "\u5927\u962A\u5E9C", value: "osaka" },
  { id: 28, label: "\u5175\u5EAB\u770C", value: "hyogo" },
  { id: 29, label: "\u5948\u826F\u770C", value: "nara" },
  { id: 30, label: "\u548C\u6B4C\u5C71\u770C", value: "wakayama" },
  { id: 31, label: "\u9CE5\u53D6\u770C", value: "tottori" },
  { id: 32, label: "\u5CF6\u6839\u770C", value: "shimane" },
  { id: 33, label: "\u5CA1\u5C71\u770C", value: "okayama" },
  { id: 34, label: "\u5E83\u5CF6\u770C", value: "hiroshima" },
  { id: 35, label: "\u5C71\u53E3\u770C", value: "yamaguchi" },
  { id: 36, label: "\u5FB3\u5CF6\u770C", value: "tokushima" },
  { id: 37, label: "\u9999\u5DDD\u770C", value: "kagawa" },
  { id: 38, label: "\u611B\u5A9B\u770C", value: "ehime" },
  { id: 39, label: "\u9AD8\u77E5\u770C", value: "kochi" },
  { id: 40, label: "\u798F\u5CA1\u770C", value: "fukuoka" },
  { id: 41, label: "\u4F50\u8CC0\u770C", value: "saga" },
  { id: 42, label: "\u9577\u5D0E\u770C", value: "nagasaki" },
  { id: 43, label: "\u718A\u672C\u770C", value: "kumamoto" },
  { id: 44, label: "\u5927\u5206\u770C", value: "oita" },
  { id: 45, label: "\u5BAE\u5D0E\u770C", value: "miyazaki" },
  { id: 46, label: "\u9E7F\u5150\u5CF6\u770C", value: "kagoshima" },
  { id: 47, label: "\u6C96\u7E04\u770C", value: "okinawa" }
];
export var MIME = /* @__PURE__ */ ((MIME2) => {
  MIME2["TXT"] = "text/plain";
  MIME2["CSV"] = "text/csv";
  MIME2["PNG"] = "image/png";
  MIME2["GIF"] = "image/gif";
  MIME2["BMP"] = "image/bmp";
  MIME2["JPG"] = "image/jpeg";
  MIME2["MP3"] = "audio/mpeg";
  MIME2["MP4"] = "video/mp4";
  MIME2["MOV"] = "video/quicktime";
  MIME2["WMV"] = "video/x-ms-wmv";
  MIME2["ZIP"] = "application/zip,application/x-zip-compressed";
  MIME2["PDF"] = "application/pdf";
  MIME2["DWG"] = "application/dwg";
  MIME2["DXF"] = "application/dxf";
  MIME2["TIFF"] = "image/tiff";
  MIME2["PSD"] = "image/x-photoshop";
  MIME2["AI"] = "application/postscript";
  MIME2["AI_2"] = "application/illustrator";
  MIME2["TFS"] = "application/tfs";
  MIME2["PPT"] = "application/vnd.ms-powerpoint";
  MIME2["DOC"] = "application/msword";
  MIME2["XLS"] = "application/vnd.ms-excel";
  MIME2["PPTX"] = "application/vnd.openxmlformats-officedocument.presentationml.presentation";
  MIME2["DOCX"] = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
  MIME2["XLSX"] = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
  MIME2["UNKNOWN"] = "unknown";
  return MIME2;
})(MIME || {});
export function useGetMimeMap() {
  const reverseMap = /* @__PURE__ */ new Map();
  Object.keys(MIME).forEach((s) => {
    const e = MIME[s];
    reverseMap.set(e.toString(), e);
  });
  return reverseMap;
}
export function useGetMimeType(filename) {
  let result = "application/octet-stream";
  if (filename) {
    const extension = filename.split(".").pop();
    if (extension) {
      const mim = MIME[extension.toUpperCase()];
      if (mim) {
        result = mim;
      }
    }
  }
  return result;
}
