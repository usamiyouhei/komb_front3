import { ref } from "vue";
import { defineStore } from "pinia";
export const useGetThemeColor = (color) => {
  if (!color)
    return "transparent";
  const row = color.toLowerCase();
  if (useColor(row)) {
    return useColor(row);
  } else if (row.match(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/) !== null) {
    return row;
  } else {
    return row;
  }
};
export function useHexToRgbCss(hex) {
  if (!hex)
    return "0,0,0";
  hex = hex.replace("#", "");
  let r, g, b;
  if (hex.length === 3) {
    r = parseInt(hex.substr(0, 1) + hex.substr(0, 1), 16);
    g = parseInt(hex.substr(1, 1) + hex.substr(1, 1), 16);
    b = parseInt(hex.substr(2, 1) + hex.substr(2, 1), 16);
  } else {
    r = parseInt(hex.substr(0, 2), 16);
    g = parseInt(hex.substr(2, 2), 16);
    b = parseInt(hex.substr(4, 2), 16);
  }
  return `${r}, ${g}, ${b}`;
}
export function useHexToRgb(hex) {
  let r, g, b;
  if (hex.length === 3) {
    r = parseInt(hex.substr(0, 1) + hex.substr(0, 1), 16);
    g = parseInt(hex.substr(1, 1) + hex.substr(1, 1), 16);
    b = parseInt(hex.substr(2, 1) + hex.substr(2, 1), 16);
  } else {
    r = parseInt(hex.substr(0, 2), 16);
    g = parseInt(hex.substr(2, 2), 16);
    b = parseInt(hex.substr(4, 2), 16);
  }
  return { r, g, b };
}
export function useLuminance(color) {
  const row = color.toLowerCase();
  let hex = "#000";
  if (useColor(row)) {
    hex = useColor(row);
  } else if (row.match(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/) !== null) {
    hex = row;
  } else if (row === "transparent") {
    hex = "#FFFFFF";
  } else {
    hex = "#000000";
  }
  if (hex) {
    const rgb = useHexToRgb(hex);
    const a = [rgb.r, rgb.g, rgb.b].map((v) => {
      v /= 255;
      return v <= 0.03928 ? v / 12.92 : ((v + 0.055) / 1.055) ** 2.4;
    });
    return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;
  } else {
    return 0;
  }
}
export const useColorSetting = defineStore(
  "color-setting",
  () => {
    const state = ref({
      base: "light",
      theme: "default"
    });
    return {
      value: state
    };
  },
  {
    persist: process.client && {
      storage: localStorage
    }
  }
);
export function useColor(color, base, theme) {
  if (process.client) {
    const colorSetting = useColorSetting();
    return colors[base ? base : colorSetting.value.base][theme ? theme : colorSetting.value.theme][color];
  }
  return "#000";
}
export const isDark = () => {
  const colorSetting = useColorSetting();
  return colorSetting.value.base === "dark";
};
export function useSetThemeColors() {
  document.documentElement.style.setProperty("--r-color-header", useHexToRgbCss(useColor("header")));
  document.documentElement.style.setProperty("--r-color-subheader", useHexToRgbCss(useColor("subheader")));
  document.documentElement.style.setProperty("--r-color-base", useHexToRgbCss(useColor("base")));
  document.documentElement.style.setProperty("--r-color-primary", useHexToRgbCss(useColor("primary")));
  document.documentElement.style.setProperty("--r-color-secondary", useHexToRgbCss(useColor("secondary")));
  document.documentElement.style.setProperty("--r-color-error", useHexToRgbCss(useColor("error")));
  document.documentElement.style.setProperty("--r-color-info", useHexToRgbCss(useColor("info")));
  document.documentElement.style.setProperty("--r-color-success", useHexToRgbCss(useColor("success")));
  document.documentElement.style.setProperty("--r-color-warning", useHexToRgbCss(useColor("warning")));
  document.documentElement.style.setProperty("--r-color-background", useHexToRgbCss(useColor("background")));
  document.documentElement.style.setProperty("--r-color-surface", useHexToRgbCss(useColor("surface")));
  document.documentElement.style.setProperty("--r-color-disabled", useHexToRgbCss(useColor("disabled")));
  document.documentElement.style.setProperty("--r-color-line", useHexToRgbCss(useColor("line")));
  document.documentElement.style.setProperty("--r-color-guide", useHexToRgbCss(useColor("guide")));
  document.documentElement.style.setProperty("--r-color-link", useHexToRgbCss(useColor("link")));
  document.documentElement.style.setProperty("--r-color-visited", useHexToRgbCss(useColor("visited")));
  document.documentElement.style.setProperty("--r-color-active", useHexToRgbCss(useColor("active")));
  document.documentElement.style.setProperty("--r-color-color", useHexToRgbCss(useColor("color")));
  document.documentElement.style.setProperty("--r-color-reverse", useHexToRgbCss(useColor("reverse")));
  document.documentElement.style.setProperty("--r-color-scroll", useHexToRgbCss(useColor("scroll")));
  document.documentElement.style.setProperty("--r-color-form", useHexToRgbCss(useColor("form")));
  document.documentElement.style.setProperty("--r-color-formline", useHexToRgbCss(useColor("formline")));
  document.documentElement.style.setProperty("--r-color-listhead", useHexToRgbCss(useColor("listhead")));
  document.documentElement.style.setProperty("--r-color-listbody", useHexToRgbCss(useColor("listbody")));
  document.documentElement.style.setProperty("--r-color-listdisabled", useHexToRgbCss(useColor("listdisabled")));
}
export function useSetBaseColors(_colors) {
  colors = _colors;
}
const light = {
  error: "#ef4444",
  info: "#3b82f6",
  success: "#22c55e",
  warning: "#F59E0B",
  //--------------------------
  background: "#fafafa",
  surface: "#F0F0F0",
  disabled: "#BBB",
  line: "#999",
  guide: "#666",
  link: "#3b82f6",
  visited: "#891DCB",
  active: "#E63D25",
  color: "#333",
  reverse: "#f0f0f0",
  form: "#ffffff",
  scroll: "#CCC",
  listhead: "#D8D8D8",
  listbody: "#f0f0f0",
  listdisabled: "#e9e9e9"
};
const dark = {
  error: "#FF5959",
  info: "#6FA5FF",
  success: "#22c55e",
  warning: "#f59e0b",
  //--------------------------
  background: "#323232",
  surface: "#262626",
  disabled: "#484848",
  line: "#555",
  guide: "#BBB",
  link: "#83B1FE",
  visited: "#CF70D1",
  active: "#ED8989",
  color: "#e0e0e0",
  reverse: "#f0f0f0",
  form: "#4F4F4F",
  scroll: "#999",
  listhead: "#484848",
  listbody: "#383838",
  listdisabled: "#343434"
};
let colors = {
  light: {
    admin: {
      header: "#232E43",
      subheader: "#475D85",
      base: "#7F8EAA",
      primary: "#85A5E0",
      secondary: "#E3827C",
      formline: "#85A5E0",
      //--------------------------
      ...light
    },
    tenant: {
      header: "#244324",
      subheader: "#498547",
      base: "#80AA7F",
      primary: "#58BB91",
      secondary: "#CB8FD4",
      formline: "#58BB91",
      //--------------------------
      ...light
    },
    test: {
      header: "#433724",
      subheader: "#856F47",
      base: "#AD9F85",
      primary: "#C4A263",
      secondary: "#7C91DB",
      formline: "#C4A263",
      //--------------------------
      ...light
    },
    default: {
      header: "#333",
      subheader: "#555",
      base: "#777",
      primary: "#4f46e5",
      secondary: "#9333ea",
      formline: "#4f46e5",
      //--------------------------
      ...light
    }
  },
  dark: {
    admin: {
      header: "#111",
      //header: '#090C1E',
      subheader: "#1B2332",
      //subheader: '#333',
      base: "#333C4D",
      //primary: '#465A80',
      primary: "#627FB2",
      secondary: "#C35750",
      formline: "#85A5E0",
      //--------------------------
      ...dark
    },
    tenant: {
      header: "#111",
      //header: '#091109',
      //subheader: '#1A2E19',
      subheader: "#192418",
      base: "#2D422C",
      primary: "#386653",
      secondary: "#9E6CA7",
      formline: "#58BB91",
      //--------------------------
      ...dark
    },
    test: {
      header: "#111",
      //header: '#1B160E',
      //subheader: '#30291C',
      subheader: "#242018",
      base: "#423B2C",
      primary: "#978157",
      secondary: "#616FA0",
      formline: "#C4A263",
      //--------------------------
      ...dark
    },
    default: {
      header: "#111",
      subheader: "#222",
      base: "#3A3A3A",
      primary: "#6366f1",
      secondary: "#9333ea",
      formline: "#4f46e5",
      //--------------------------
      ...dark
    }
  }
};
