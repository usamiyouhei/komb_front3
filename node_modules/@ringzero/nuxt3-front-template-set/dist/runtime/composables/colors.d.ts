import { type Ref } from 'vue';
export declare const useGetThemeColor: (color?: string) => string;
export declare function useHexToRgbCss(hex: string): string;
export declare function useHexToRgb(hex: string): {
    r: any;
    g: any;
    b: any;
};
export declare function useLuminance(color: string): number;
type colorSettingState = {
    base: string;
    theme: string;
};
export declare const useColorSetting: import("pinia").StoreDefinition<"color-setting", import("pinia")._UnwrapAll<Pick<{
    value: Ref<colorSettingState>;
}, "value">>, Pick<{
    value: Ref<colorSettingState>;
}, never>, Pick<{
    value: Ref<colorSettingState>;
}, never>>;
export declare function useColor(color: string, base?: string, theme?: string): string;
export declare const isDark: () => boolean;
export declare function useSetThemeColors(): void;
/** モジュール外から実行時にカラーセットを登録する */
export declare function useSetBaseColors(_colors: {
    [key: string]: {
        [key: string]: {
            [key: string]: string;
        };
    };
}): void;
export {};
